<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="member">

	<select id="memberCount" resultType="int">
		SELECT COUNT(*) FROM MEMBER
	</select>
	
	<select id="memberDeleteAll">
		DELETE FROM MEMBER
	</select>
	
	<select id="insertOne" parameterType="member">
		INSERT INTO MEMBER VALUES(#{memberEmail}, #{memberPw}, #{memberName}, #{memberNick}, #{memberProfile}, null, #{intro}, #{emailAuthKey}, #{phoneAuthKey}, #{lastLoggedIn}, #{enrollDate}, null, #{kakaoId})
	</select>

	<select id="selectOne" parameterType="member" resultType="member">
		select * from member where memberquit is null and
		<choose>
			<when test="kakaoId == null or kakaoId == ''">
				memberEmail = #{memberEmail}
			</when>
			<otherwise>
				kakaoId = #{kakaoId}
			</otherwise>
		</choose>
	</select>
	
	<select id="memberEmailCheck" parameterType="string" resultType="string">
		select emailAuthKey from member where memberEmail=#{memberEmail}
	</select>
	
	<insert id="insertUserAuth" parameterType="map">
		insert into member (emailAuthKey, memberEmail) values (#{emailAuthkey} ,#{memberEmail})
	</insert>

	<update id="updateUserAuth">
		update into member set emailAuthkey=#{emailAuthkey} where memberEmail=#{memberEmail}
	</update>
	
	<update id="memberUpdate">
      update Member set memberNick=#{memberNick}, intro=#{intro}
      <if test="memberProfile != null and memberProfile !=''">
      , memberProfile=#{memberProfile} 
      </if>
      where memberEmail=#{memberEmail} and memberQuit is null
		<selectKey keyProperty="memberProfile" resultType="string" order="AFTER" keyColumn="memberProfile">
			select memberProfile from member where memberEmail=#{memberEmail}
		</selectKey>
   </update>
   
   <update id="memberPwUpdate">
      update member set memberPw=#{memberPw} where memberEmail=#{memberEmail} and memberQuit is null
   </update>
   
   <select id="memberPwCheck" parameterType="member" resultType="member">
      select memberPw from member where memberEmail=#{memberEmail} and memberQuit is null
   </select>
   
   <select id="memberNickCheck" parameterType="string" resultType="int">
      select count(*) from member where memberNick=#{memberNick} and memberQuit is null
   </select>
   
   <update id="memberDelete">
      update member set memberQuit=sysdate where memberEmail=#{memberEmail}
   </update>
   
   <select id="selectCheckNick" parameterType="member" resultType="member">
   	select * from member where memberNick=#{memberNick}
   </select>
   
</mapper>